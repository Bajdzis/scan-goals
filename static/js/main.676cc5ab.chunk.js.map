{"version":3,"sources":["store/actions/page/action.ts","hooks/usePageRoute.ts","store/actions/learn/action.ts","store/reducers/learn/learnReducer.ts","store/actions/toastr/action.ts","layouts/LearnPage/components/NewTip/NewTip.tsx","hooks/useLearnStats.ts","hooks/useQuote.ts","components/Quote/Quote.tsx","components/GoalList/GoalList.tsx","store/actions/goals/action.ts","hooks/useGoalCreator.ts","components/StickyScroll/StickyScroll.tsx","components/StickyItem/StickyItem.tsx","store/reducers/goals/goalsReducer.ts","layouts/GoalPage/components/EditGoal/EditGoal.tsx","App.tsx","layouts/HomePage/HomePage.tsx","layouts/LearnPage/LearnPage.tsx","layouts/WelcomePage/WelcomePage.tsx","layouts/GoalPage/GoalPage.tsx","layouts/AssignTipPage/AssignTipPage.tsx","serviceWorker.ts","store/reducers/tips/tipsReducer.ts","store/reducers/page/pageReducer.ts","store/reducers/goalFields/goalFieldsReducer.ts","store/reducers/toastr/toastrReducer.ts","store/root.ts","index.tsx","components/Toastr/Toastr.tsx"],"names":["goToPage","actionCreatorFactory","actionCreator","usePageRoute","page","dispatch","useDispatch","name","props","readTip","learnReducer","reducerWithInitialState","mind","goodTips","badTips","time","fit","case","state","payload","groupName","feedback","id","LEARN_TIP","title","description","unlockFields","getTip","LEARN_TIP_GROUP","addToastr","deleteToastr","countReadTips","group","learn","length","NewTip","onRead","count","useSelector","tip","onClick","type","message","tipId","useLearnStats","mindCount","timeCount","fitCount","allTipsCount","readTipsCount","QUOTES","value","author","Quote","quote","useQuote","className","GoalList","goalArray","goals","map","goal","index","key","createNewGoals","editGoals","assignTipToGoals","useGoalCreator","prompt","StickyScroll","children","StickyItem","top","bottom","style","GOAL_FIELDS","goalsReducer","tipsId","newState","push","fields","EditGoal","goalIndex","onStopEdit","goalFields","action","onSubmit","e","preventDefault","form","target","Array","from","elements","reduce","includes","defaultValue","why","PAGE_NAME_TO_COMPONENT","home","goToLearn","goToGoal","countGoal","display","height","gridTemplateRows","margin","fontSize","textAlign","disabled","goToHome","useState","setPage","welcome","createGoal","editIndex","setEditIndex","assignTip","selectedIndex","setSelectedIndex","onChange","filter","toggleSelectByIndex","checked","forEach","Boolean","window","location","hostname","match","tipsReducer","pageReducer","goalFieldsReducer","toastrReducer","messages","incrementId","rootReducer","combineReducers","tips","toastr","initialState","JSON","parse","localStorage","getItem","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","setItem","stringify","ReactDOM","render","Suspense","fallback","pageName","pageProps","Component","hideId","setHideId","renderId","setRenderId","bemName","indexOf","setTimeout","bemMod","onTransitionEnd","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.676cc5ab.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\r\nimport { PageState } from '../../reducers/page/pageReducer';\r\n \r\nconst actionCreator = actionCreatorFactory('PAGE');\r\n\r\nexport const goToPage = actionCreator<PageState>('GO_TO_PAGE');\r\n","import { useDispatch } from 'react-redux';\r\nimport { PageName } from '../store/reducers/page/pageReducer';\r\nimport { goToPage } from '../store/actions/page/action';\r\n\r\nexport function usePageRoute(page: PageName){\r\n    const dispatch = useDispatch();\r\n\r\n    return () => {\r\n        dispatch(goToPage({\r\n            name: page,\r\n            props: {}\r\n        }));\r\n    };\r\n}\r\n","import actionCreatorFactory from 'typescript-fsa';\r\nimport { LearnGroupNames } from '../../reducers/learn/learnReducer';\r\n \r\nconst actionCreator = actionCreatorFactory('LEARN');\r\n\r\ninterface ReadTipParams {\r\n    id: string;\r\n    groupName: LearnGroupNames;\r\n    feedback: 'good'|'bad';\r\n}\r\n\r\nexport const readTip = actionCreator<ReadTipParams>('READ_TIP');\r\n\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { readTip } from '../../actions/learn/action';\r\n\r\nexport interface LearnGroup {\r\n    goodTips: string[];\r\n    badTips: string[];\r\n}\r\n\r\nexport interface LearnState {\r\n    mind: LearnGroup;\r\n    time: LearnGroup;\r\n    fit: LearnGroup;\r\n}\r\n\r\nexport type LearnGroupNames = keyof LearnState;\r\n\r\nconst INITIAL_STATE: LearnState = {\r\n    mind: { goodTips: [], badTips:[]},\r\n    time: { goodTips: [], badTips:[]},\r\n    fit: { goodTips: [], badTips:[]},\r\n};\r\n\r\nexport const learnReducer = reducerWithInitialState<LearnState>(INITIAL_STATE)\r\n    .case(readTip, (state, payload) => {\r\n        return {\r\n            ...state,\r\n            [payload.groupName]: {\r\n                goodTips: [...state[payload.groupName].goodTips, ...(payload.feedback === 'good' ? [payload.id] : [])],\r\n                badTips: [...state[payload.groupName].badTips, ...(payload.feedback === 'bad' ? [payload.id] : [])]\r\n            }\r\n        };\r\n    });\r\n\r\n\r\nexport interface LearnTip {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    unlockFields: string[];\r\n}\r\n\r\nconst LEARN_TIP: {[key: string]: Omit<LearnTip, 'id'>} = {\r\n    'mind-1' : {\r\n        title: 'Zerwij z rozmyślaniem',\r\n        description: 'Jest tylko tu i teraz. Skończ z myśleniem o przeszłości i przyszłosci.',\r\n        unlockFields: []\r\n    },\r\n    'time-1': {\r\n        title: 'Skup się!',\r\n        description: 'Zmiejsz ilość powiadomień',\r\n        unlockFields: []\r\n    },\r\n    'time-2' : {\r\n        title: 'Dlaczego',\r\n        description: 'Odpowiedź sobie na jedno z najważniejszych pytań! Co dobrego stanie się w moim zyciu gdy zrealizuje okreslony cel. Warto się zastanowić dlaczego chcesz zrealizować określony cel? Aby Ci pomóc dodamy nowe pole w trybie edycji celu!',\r\n        unlockFields: ['why']\r\n    },\r\n    'fit-1': {\r\n        title: 'Rusz się!',\r\n        description: 'Koniec z windą',\r\n        unlockFields: []\r\n    },\r\n    'fit-2': {\r\n        title: 'Rób pomiary!',\r\n        description: 'Sprawdzaj czy Twoje działania przynoszą pożadany skutek',\r\n        unlockFields: []\r\n    }\r\n};\r\n\r\nexport function getTip(id: string): LearnTip {\r\n    if(LEARN_TIP[id]){\r\n        return { ...LEARN_TIP[id] , id};\r\n    }\r\n    return {\r\n        id: 'unknown',\r\n        description: '',\r\n        title: '',\r\n        unlockFields: []\r\n    };\r\n}\r\n\r\nexport const LEARN_TIP_GROUP: {[key in LearnGroupNames]: LearnTip[]} = {\r\n    mind: [\r\n        getTip('mind-1'),\r\n    ],\r\n    time:[\r\n        getTip('time-1'),\r\n        getTip('time-2')\r\n    ],\r\n    fit: [\r\n        getTip('fit-1'),\r\n        getTip('fit-1')\r\n    ]\r\n};\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n \r\nconst actionCreator = actionCreatorFactory('TOASTR');\r\n\r\nexport const addToastr = actionCreator<{ type: 'success'|'error'|'warning'|'info', message: string}>('ADD_TOASTR');\r\nexport const deleteToastr = actionCreator<number>('DELETE_TOASTR');\r\n\r\n\r\n","import React from 'react';\r\nimport './NewTip.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LearnGroupNames, LEARN_TIP_GROUP } from '../../../../store/reducers/learn/learnReducer';\r\nimport { RootState } from '../../../../store/root';\r\nimport { readTip } from '../../../../store/actions/learn/action';\r\nimport { goToPage } from '../../../../store/actions/page/action';\r\nimport { addToastr } from '../../../../store/actions/toastr/action';\r\n\r\ninterface NewTipProps {\r\n    groupName: LearnGroupNames;\r\n    onRead(): void;\r\n}\r\n\r\nexport const countReadTips = (groupName: LearnGroupNames) => (state: RootState) => {\r\n    const group = state.learn[groupName];\r\n    return group.badTips.length + group.goodTips.length;\r\n};\r\n\r\nexport const NewTip: React.FC<NewTipProps> = ({ groupName, onRead }: NewTipProps) => {\r\n    const dispatch = useDispatch();\r\n    const count = useSelector(countReadTips(groupName));\r\n    const tip = LEARN_TIP_GROUP[groupName][count] || null;\r\n    if(tip === null){\r\n        return null;\r\n    }\r\n    const onClick = (feedback: 'good'| 'bad') => {\r\n        onRead();\r\n        dispatch(readTip({\r\n            feedback,\r\n            groupName,\r\n            id: tip.id\r\n        }));\r\n        tip.unlockFields.length && dispatch(addToastr({\r\n            type: \"success\",\r\n            message: \"Gratulacje! Odblokowałeś nowe pole do uzupelnienia w zakładce cele. Uzupełnij je najszybciej jak to mozliwe!\"\r\n        }));\r\n        feedback === 'good' && dispatch(goToPage({\r\n            name:'assignTip',\r\n            props: {\r\n                tipId: tip.id\r\n            }\r\n        }));\r\n    };\r\n    return (\r\n        <div>\r\n            <h1>{tip.title}</h1>\r\n            <p>{tip.description}</p>\r\n            <h2>Czy porada przyda Ci się do realizacji któregoś z celów?</h2>\r\n            <button onClick={() => onClick('good')}>Tak</button>\r\n            <button onClick={() => onClick('bad')}>Nie</button>\r\n        </div>\r\n    );\r\n};\r\n","import { LEARN_TIP_GROUP } from '../store/reducers/learn/learnReducer';\r\nimport { useSelector } from 'react-redux';\r\nimport { countReadTips } from '../layouts/LearnPage/components/NewTip/NewTip';\r\n\r\nexport function useLearnStats(){\r\n    const mindCount = useSelector(countReadTips('mind'));\r\n    const timeCount = useSelector(countReadTips('time'));\r\n    const fitCount = useSelector(countReadTips('fit'));\r\n\r\n    const allTipsCount = LEARN_TIP_GROUP.mind.length + LEARN_TIP_GROUP.time.length + LEARN_TIP_GROUP.fit.length;\r\n\r\n    return {\r\n        allTipsCount,\r\n        readTipsCount: mindCount + timeCount + fitCount\r\n    };\r\n}\r\n","import { useLearnStats } from './useLearnStats';\r\n\r\ninterface Quote {\r\n    value: string;\r\n    author: string;\r\n}\r\n\r\nexport function useQuote() {\r\n    const {readTipsCount} = useLearnStats();\r\n    return QUOTES[readTipsCount] || QUOTES[0];\r\n}\r\n\r\n\r\nconst QUOTES: Quote[] = [\r\n    {\r\n        value: 'Sukces jest sumą małych wysiłków, powtarzanych dzień po dniu.',\r\n        author: 'Robert Collier'\r\n    },\r\n    {\r\n        value: 'Nie próbuj, rób albo nie rób, nie ma próbowania',\r\n        author: 'Mistrz Yoda'\r\n    },\r\n    {\r\n        value: 'Jeżeli chcesz uniknąć krytyki: nic nie mów, nic nie rób, bądź nikim.',\r\n        author: 'Arystoteles'\r\n    },\r\n    {\r\n        value: 'W życiu nie chodzi o to, by siebie odnaleźć. W życiu chodzi o to, aby siebie stworzyć!',\r\n        author: 'George Bernard Shaw'\r\n    },\r\n    {\r\n        value: 'Nic nie jest szczególnie trudne, jeżeli podzielisz to na małe zadania.',\r\n        author: 'Henry Ford'\r\n    },\r\n    {\r\n        value: 'Nie ma znaczenia jak wolno idziesz, tak długo jak nie przestajesz.',\r\n        author: 'Konfucjusz'\r\n    },\r\n    {\r\n        value: 'Nigdy nie rezygnuj z marzenia, tylko dlatego, że zrealizowanie go wymaga czasu. Czas i tak upłynie.',\r\n        author: 'Earl Nightingale'\r\n    }\r\n];\r\n","import React from 'react';\r\nimport './Quote.scss';\r\nimport { useQuote } from '../../hooks/useQuote';\r\n\r\nexport const Quote: React.FC = () => {\r\n    const quote = useQuote();\r\n\r\n    return (<div className=\"quote\">\r\n        <div className=\"quote__value\">\r\n            {quote.value}\r\n        </div>\r\n        <div className=\"quote__author\">\r\n            {quote.author}\r\n        </div>\r\n    </div>);\r\n};\r\n","import React from 'react';\r\nimport './GoalList.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/root';\r\n\r\ninterface GoalListProps {\r\n    onClick?(index: number): void;\r\n}\r\n\r\nexport const GoalList: React.FC<GoalListProps> = ({ onClick }: GoalListProps) => {\r\n    const goalArray = useSelector((state: RootState) => state.goals);\r\n\r\n    return <>{goalArray.map((goal, index) => \r\n        <div className=\"goalList\" key={index} onClick={() => onClick && onClick(index)}>\r\n            <span>{goal.name}</span>\r\n        </div>\r\n    )}</>;\r\n};\r\n","import actionCreatorFactory from 'typescript-fsa';\r\nimport { Goal } from '../../reducers/goals/goalsReducer';\r\n \r\nconst actionCreator = actionCreatorFactory('GOALS');\r\n\r\nexport const createNewGoals = actionCreator<string>('CREATE_NEW');\r\n\r\ninterface EditGoalsParams{\r\n    index: number;\r\n    fields: Partial<Goal>;\r\n}\r\n\r\nexport const editGoals = actionCreator<EditGoalsParams>('EDIT');\r\n\r\ninterface AssignTipToGoalsParams {\r\n    index: number;\r\n    tipId: string;\r\n}\r\n\r\nexport const assignTipToGoals = actionCreator<AssignTipToGoalsParams>('ASSIGN_TIP_TO_GOALS');\r\n\r\n","import { useDispatch } from 'react-redux';\r\nimport { createNewGoals } from '../store/actions/goals/action';\r\n\r\nexport function useGoalCreator(){\r\n    const dispatch = useDispatch();\r\n\r\n    return () => {\r\n        let title = prompt('Zapisz nazwę swojego celu');\r\n        if (title) {\r\n            dispatch(createNewGoals(title));\r\n        }\r\n    };\r\n}\n","import React from 'react';\r\nimport './StickyScroll.scss';\r\n\r\ninterface StickyScrollProps {\r\n    children: React.ReactNode;\r\n}\r\n\r\nexport const StickyScroll: React.FC<StickyScrollProps> = ({children}: StickyScrollProps) => {\r\n  \r\n\r\n    return (<div className=\"stickyScroll\">\r\n        {children}\r\n    </div>);\r\n};\r\n","import React from 'react';\r\nimport './StickyItem.scss';\r\n\r\ninterface StickyItemProps {\r\n    children: React.ReactNode;\r\n    top?: number;\r\n    bottom?: number;\r\n}\r\n\r\nexport const StickyItem: React.FC<StickyItemProps> = ({children, top, bottom}: StickyItemProps) => {\r\n\r\n    return (<div className=\"stickyItem\" style={{top, bottom}}>\r\n        {children}\r\n    </div>);\r\n};\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { createNewGoals, editGoals, assignTipToGoals } from '../../actions/goals/action';\r\n\r\nexport interface Goal {\r\n    name: string;\r\n    why?: string;\r\n    tipsId: string[];\r\n}\r\n\r\nexport type GoalField = keyof Goal;\r\n\r\nexport const GOAL_FIELDS: GoalField[] = ['name', 'why'];\r\n\r\nexport type GoalsState = Goal[];\r\n\r\nexport const goalsReducer = reducerWithInitialState<GoalsState>([])\r\n    .case(createNewGoals, (state, name) => [...state, { name, tipsId: [] }])\r\n    .case(assignTipToGoals, (state, {index, tipId}) => {\r\n        const newState = [...state];\r\n        newState[index].tipsId.push(tipId);\r\n        return newState;\r\n    })\r\n    .case(editGoals, (state, {fields, index}) => {\r\n        const newState = [...state];\r\n\r\n        newState[index] = {\r\n            ...state[index],\r\n            ...fields\r\n        };\r\n        return newState;\r\n    });\r\n","import React from 'react';\r\nimport './EditGoal.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../store/root';\r\nimport { editGoals } from '../../../../store/actions/goals/action';\r\nimport { Goal, GOAL_FIELDS } from '../../../../store/reducers/goals/goalsReducer';\r\nimport { getTip } from '../../../../store/reducers/learn/learnReducer';\r\n\r\ninterface EditGoalProps {\r\n    goalIndex: number;\r\n    onStopEdit(): void;\r\n}\r\n\r\nexport const EditGoal: React.FC<EditGoalProps> = ({ goalIndex, onStopEdit }: EditGoalProps) => {\r\n    const dispatch = useDispatch();\r\n    const goal = useSelector((state: RootState) => state.goals[goalIndex]);\r\n    const goalFields = useSelector((state: RootState) => state.goalFields);\r\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const form = e.target as HTMLFormElement;\r\n        const elements = Array.from(form.elements) as HTMLInputElement[];\r\n        const fields = elements.reduce((fields, {value, name}) => {\r\n            if (value && GOAL_FIELDS.includes(name as any)) {\r\n                fields[name as 'name' | 'why'] = value;\r\n            }\r\n            return fields;\r\n        }, {} as Partial<Goal>);\r\n        dispatch(editGoals({\r\n            index: goalIndex,\r\n            fields\r\n        }));\r\n        onStopEdit();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={onStopEdit}>{'<'} Wróć</button>\r\n            <form action=\"\" onSubmit={onSubmit}>\r\n                <label>\r\n                    Nazwa\r\n                    <input type=\"text\" name=\"name\" defaultValue={goal.name}/>\r\n                </label>\r\n                {goalFields.includes('why') && <label>\r\n                    Co zmieni się w twoim zyciu gdy zrealizuejsz cel? Dlaczego chcesz go osiągnać?\r\n                    <input type=\"text\" name=\"why\" defaultValue={goal.why}/>\r\n                </label>}\r\n                <button type=\"submit\">Zapisz</button>\r\n            </form>\r\n            {!!goal.tipsId.length && <h2>Przydatne wskazówki:</h2>}\r\n            {goal.tipsId.map(tipId => {\r\n                const tip = getTip(tipId);\r\n\r\n                return <div key={tipId}>{tip.title}</div>;\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { HomePage } from './layouts/HomePage/HomePage';\r\nimport { LearnPage } from './layouts/LearnPage/LearnPage';\r\nimport { WelcomePage } from './layouts/WelcomePage/WelcomePage';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from './store/root';\r\nimport { GoalPage } from './layouts/GoalPage/GoalPage';\r\nimport { AssignTipPage, AssignTipPageProps } from './layouts/AssignTipPage/AssignTipPage';\r\n// import PermissionPage from './layouts/PermissionPage/PermissionPage';\r\n// const PermissionPage = React.lazy(() => import('./layouts/PermissionPage/PermissionPage'));\r\n\r\nexport const PAGE_NAME_TO_COMPONENT = {\r\n    home: HomePage,\r\n    learn: LearnPage,\r\n    welcome: WelcomePage,\r\n    goal: GoalPage,\r\n    assignTip: AssignTipPage\r\n};\r\n\r\nexport const App: React.FC = () => {\r\n    // if(Notification.permission !== 'granted'){\r\n    //     return <PermissionPage />;\r\n    // }\r\n    const pageName = useSelector((state:RootState) => state.page.name);\r\n    const pageProps = useSelector((state:RootState) => state.page.props) as AssignTipPageProps;\r\n    const Component = PAGE_NAME_TO_COMPONENT[pageName];\r\n    return (\r\n        <Component {...pageProps}/>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport './HomePage.scss';\r\nimport { usePageRoute } from '../../hooks/usePageRoute';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/root';\r\nimport { useLearnStats } from '../../hooks/useLearnStats';\r\nimport { Quote } from '../../components/Quote/Quote';\r\n\r\nexport const HomePage: React.FC = () => {\r\n    const goToLearn = usePageRoute('learn');\r\n    const goToGoal = usePageRoute('goal');\r\n    const countGoal = useSelector((state: RootState) => state.goals.length);\r\n    const {allTipsCount, readTipsCount} = useLearnStats();\r\n    return (\r\n        <div  style={\r\n            {\r\n                display: 'grid',\r\n                height: '100%',\r\n                gridTemplateRows: 'auto 1fr'\r\n            }\r\n        }>\r\n            <div>\r\n                <h1>Mój everest</h1>\r\n                <Quote />\r\n            </div>\r\n            <div  style={\r\n                {\r\n                    display: 'grid',\r\n                    height: '100%',\r\n                    gridTemplateRows: 'auto 1fr auto 1fr auto'\r\n                }\r\n            }>\r\n                <div>\r\n                    <button type=\"button\" onClick={goToGoal}>Edytuj cele</button>\r\n                    <p style={{ margin: 0, fontSize: '0.85em', textAlign: 'center' }}>Obecna liczba celów to <strong>{countGoal}</strong>.</p>\r\n                </div>\r\n                <div></div>\r\n                <div>\r\n                    <button type=\"button\" onClick={goToLearn} disabled={readTipsCount === allTipsCount}>Rozwijaj się</button>\r\n                    <p style={{ margin: 0, fontSize: '0.85em', textAlign: 'center' }}>Odkryto <strong>{readTipsCount}</strong> / {allTipsCount} porad.</p>\r\n                </div>\r\n                <div></div>\r\n                <div>\r\n                    <button type=\"button\" className=\"two\">Zmotywuj znajomych</button>\r\n                    <p style={{ margin: 0, fontSize: '0.85em', textAlign: 'center' }}>Napisz do znajomych o swoich celach!</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport './LearnPage.scss';\r\nimport { LearnGroupNames, LEARN_TIP_GROUP } from '../../store/reducers/learn/learnReducer';\r\nimport { NewTip, countReadTips } from './components/NewTip/NewTip';\r\nimport { usePageRoute } from '../../hooks/usePageRoute';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const LearnPage: React.FC = () => {\r\n    const goToHome = usePageRoute('home');\r\n    const [page, setPage] = useState<LearnGroupNames|null>(null);\r\n    const mindCount = useSelector(countReadTips('mind'));\r\n    const timeCount = useSelector(countReadTips('time'));\r\n    const fitCount = useSelector(countReadTips('fit'));\r\n    return (\r\n        <div>\r\n            {page === null && <>\r\n                <button className=\"backButton\" onClick={goToHome} title=\"Wróć\">{'<'} </button>\r\n                <h1>Rozwijaj się</h1>\r\n                <p>Wybierz jeden z trzech obszarów w których chciałbyś się rozwijać. Dziennie może odczytać tylko jedną wzkazówkę. </p>\r\n\r\n                <button type=\"button\" onClick={() => setPage('mind')} disabled={mindCount === LEARN_TIP_GROUP.mind.length}>Wiedza</button>\r\n                <p>Lekcji {mindCount}/{LEARN_TIP_GROUP.mind.length}</p>\r\n                <br/>\r\n\r\n                <button type=\"button\" onClick={() => setPage('time')} disabled={timeCount === LEARN_TIP_GROUP.time.length}>Czas</button>\r\n                <p>Lekcji {timeCount}/{LEARN_TIP_GROUP.time.length}</p>\r\n                <br/>\r\n\r\n                <button type=\"button\" onClick={() => setPage('fit')} disabled={fitCount === LEARN_TIP_GROUP.fit.length}>Zdrowie</button>\r\n                <p>Lekcji {fitCount}/{LEARN_TIP_GROUP.fit.length}</p>\r\n            \r\n            </>}\r\n\r\n            {page !== null && <NewTip groupName={page} onRead={() => {\r\n                setPage(null);\r\n            }} />}\r\n            \r\n        </div>\r\n\r\n    );\r\n};\r\n","import React from 'react';\r\nimport './WelcomePage.scss';\r\nimport { GoalList } from '../../components/GoalList/GoalList';\r\nimport { useGoalCreator } from '../../hooks/useGoalCreator';\r\nimport { usePageRoute } from '../../hooks/usePageRoute';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/root';\r\nimport { StickyScroll } from '../../components/StickyScroll/StickyScroll';\r\nimport { StickyItem } from '../../components/StickyItem/StickyItem';\r\n\r\nexport const WelcomePage: React.FC = () => {\r\n    const countGoal = useSelector((state: RootState) => state.goals.length);\r\n    const createGoal = useGoalCreator();\r\n    const goToHome = usePageRoute('home');\r\n    return (\r\n        <div style={\r\n            {\r\n                display: 'grid',\r\n                height: \"100%\",\r\n                gridTemplateRows: 'auto 1fr'\r\n            }\r\n        }>\r\n            <h1>Witaj w naszej aplikacji!</h1>\r\n            <StickyScroll>\r\n                \r\n                    <p>Na początek wypisz swoje wszystkie cele, plany, marzenia które chciałbyś zrealizować. Będziemy intensywnie nad nimi pracować abyś mógł je spełnić. Pamiętaj marzenia się nie spełniają marzenia się spełnia!</p>\r\n                <StickyItem top={0}>\r\n                    <button type=\"button\" onClick={createGoal}>Dodaj cel lub postanownie</button>\r\n                </StickyItem>\r\n\r\n                <GoalList/>\r\n\r\n                <div style={{height:\"50vh\"}}></div>\r\n\r\n                <StickyItem bottom={0}>\r\n                    <button type=\"button\" onClick={goToHome} disabled={countGoal <= 0}> Zakończ dodawanie </button>\r\n                </StickyItem>\r\n            </StickyScroll>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport './GoalPage.scss';\r\nimport { GoalList } from '../../components/GoalList/GoalList';\r\nimport { useGoalCreator } from '../../hooks/useGoalCreator';\r\nimport { usePageRoute } from '../../hooks/usePageRoute';\r\nimport { EditGoal } from './components/EditGoal/EditGoal';\r\n\r\nexport const GoalPage: React.FC = () => {\r\n    const createGoal = useGoalCreator();\r\n    const goToHome = usePageRoute('home');\r\n    const [editIndex, setEditIndex] = useState<number | null>(null);\r\n\r\n    if(editIndex !== null){\r\n        return <EditGoal goalIndex={editIndex} onStopEdit={() => setEditIndex(null)}/>;\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={goToHome}>{'<'} Wróć</button>\r\n            <h1>Twoje cele</h1>\r\n            <p>Kliknij w nazwe celu aby go przeglądać lub edytować.</p>\r\n            <button type=\"button\" onClick={createGoal}>Dodaj cel</button>\r\n            <GoalList onClick={index => setEditIndex(index)}/>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport './AssignTipPage.scss';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../../store/root';\r\nimport { assignTipToGoals } from '../../store/actions/goals/action';\r\nimport { usePageRoute } from '../../hooks/usePageRoute';\r\n\r\nexport interface AssignTipPageProps {\r\n    tipId: string\r\n}\r\n\r\nexport const AssignTipPage: React.FC<AssignTipPageProps> = ({ tipId }: AssignTipPageProps) => {\r\n    const dispatch = useDispatch();\r\n    const goToHome = usePageRoute('home');\r\n    const goalArray = useSelector((state: RootState) => state.goals);\r\n    const [selectedIndex, setSelectedIndex] = useState<number[]>([]);\r\n    const toggleSelectByIndex = (index: number) => {\r\n        if (selectedIndex.includes(index)) {\r\n            setSelectedIndex(selectedIndex.filter((value) => value !== index));\r\n        } else {\r\n            setSelectedIndex([...selectedIndex, index]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"assignTipPage\">\r\n            <h2>Do których celów użyjesz zdobytą wiedzę?</h2>\r\n            \r\n            {goalArray.map((goal, index) => \r\n                <label key={index} className=\"assignTipPage__goal\">\r\n                    <input \r\n                        className=\"assignTipPage__input\"\r\n                        type=\"checkbox\" \r\n                        onChange={() => toggleSelectByIndex(index)} \r\n                        checked={selectedIndex.includes(index)}\r\n                    />\r\n                    <span>{goal.name}</span>\r\n                </label>\r\n            )}\r\n\r\n            <button onClick={() => {\r\n                selectedIndex.forEach((index) => {\r\n                    dispatch(assignTipToGoals({\r\n                        index,\r\n                        tipId\r\n                    }));\r\n                });\r\n                goToHome();\r\n            }}>\r\n                Gotowe\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\n\r\nexport interface TipsState {\r\n\r\n}\r\n\r\nexport const tipsReducer = reducerWithInitialState<TipsState>({});\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { PAGE_NAME_TO_COMPONENT } from '../../../App';\r\nimport { goToPage } from '../../actions/page/action';\r\n\r\nexport type PageName = keyof typeof PAGE_NAME_TO_COMPONENT;\r\n\r\nexport interface PageState {\r\n    name: PageName;\r\n    props: {[key: string]: any};\r\n}\r\n\r\nexport const pageReducer = reducerWithInitialState<PageState>({\r\n    name: 'welcome',\r\n    props: {}\r\n})\r\n    .case(goToPage, (state, payload) => payload);\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { readTip } from '../../actions/learn/action';\r\nimport { getTip } from '../learn/learnReducer';\r\n\r\nexport type GoalFieldsState = string[];\r\n\r\nexport const goalFieldsReducer = reducerWithInitialState<GoalFieldsState>([])\r\n    .case(readTip, (state, {id}) => [...state, ...getTip(id).unlockFields]);\r\n\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { addToastr, deleteToastr } from '../../actions/toastr/action';\r\n\r\nexport type Toastr = {\r\n    type: 'success'|'error'|'warning'|'info',\r\n    message: string;\r\n    id: number;\r\n}\r\n\r\nexport type ToastrState = {\r\n    messages: Toastr[],\r\n    incrementId: number;\r\n};\r\n\r\nexport const toastrReducer = reducerWithInitialState<ToastrState>({\r\n    messages: [],\r\n    incrementId: 0,\r\n})\r\n    .case(addToastr, (state, {message, type}) => ({ \r\n        messages: [\r\n            ...state.messages, \r\n            {\r\n                id: state.incrementId++,\r\n                message,\r\n                type\r\n            }\r\n        ], \r\n        incrementId: state.incrementId++\r\n    }))\r\n    .case(deleteToastr, (state, id) => ({ \r\n        ...state,\r\n        messages: state.messages.filter((message) => message.id !== id), \r\n    }));\r\n\r\n","\r\nimport { combineReducers, createStore, Action } from 'redux';\r\nimport { goalsReducer, GoalsState } from './reducers/goals/goalsReducer';\r\nimport { tipsReducer, TipsState } from './reducers/tips/tipsReducer';\r\nimport { LearnState, learnReducer } from './reducers/learn/learnReducer';\r\nimport { PageState, pageReducer } from './reducers/page/pageReducer';\r\nimport { goalFieldsReducer, GoalFieldsState } from './reducers/goalFields/goalFieldsReducer';\r\nimport { ToastrState, toastrReducer } from './reducers/toastr/toastrReducer';\r\n\r\nexport interface RootState {\r\n    goals: GoalsState,\r\n    tips: TipsState,\r\n    learn: LearnState,\r\n    page: PageState,\r\n    goalFields: GoalFieldsState,\r\n    toastr: ToastrState\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    goals: goalsReducer, \r\n    tips: tipsReducer, \r\n    learn: learnReducer,\r\n    page: pageReducer,\r\n    goalFields: goalFieldsReducer,\r\n    toastr: toastrReducer\r\n});\r\n\r\nconst initialState: RootState = JSON.parse(window.localStorage.getItem('state') || '{}') as RootState;\r\n\r\n// @ts-ignore\r\nexport const store = createStore<RootState, Action, unknown, unknown>(rootReducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nstore.subscribe(() => {\r\n    const state = store.getState();\r\n    window.localStorage.setItem('state', JSON.stringify(state));\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from './store/root';\r\nimport { Toastr } from './components/Toastr/Toastr';\r\n\r\nReactDOM.render(<Provider store={store}>\r\n    <React.Suspense fallback={null}>\r\n        <App />\r\n        <Toastr />\r\n    </React.Suspense>\r\n</Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { useState } from 'react';\r\nimport { Block, Element } from 'react-simple-bem';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { RootState } from '../../store/root';\r\nimport { deleteToastr } from '../../store/actions/toastr/action';\r\nimport './Toastr.scss';\r\n\r\nexport const Toastr: React.FC = () => {\r\n    const [hideId, setHideId] = useState<number[]>([]);\r\n    const [renderId, setRenderId] = useState<number[]>([]);\r\n    const messages = useSelector((state: RootState) => state.toastr.messages);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Block bemName=\"toastr\">\r\n            {messages.map((message) => {\r\n                if (renderId.indexOf(message.id) === -1) {\r\n                    setTimeout(() => {\r\n                        setRenderId([...renderId, message.id]);\r\n                    }, 1);\r\n\r\n                    setTimeout(() => {\r\n                        setHideId([...hideId, message.id]);\r\n                    }, 9000);\r\n                }\r\n\r\n                return (\r\n                    <Element\r\n                        key={message.id}\r\n                        bemName=\"message\"\r\n                        bemMod={{\r\n                            [message.type]: true,\r\n                            show: renderId.indexOf(message.id) !== -1,\r\n                            hide: hideId.indexOf(message.id) !== -1,\r\n                        }}\r\n                        onTransitionEnd={() => hideId.indexOf(message.id) !== -1 && dispatch(deleteToastr(message.id))}\r\n                    >\r\n                        {message.message}\r\n                    </Element>\r\n                );\r\n            })}\r\n        </Block>\r\n    );\r\n}\r\n"],"sourceRoot":""}