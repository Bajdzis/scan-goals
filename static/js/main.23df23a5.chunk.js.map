{"version":3,"sources":["store/actions/page/action.ts","hooks/usePageRoute.ts","store/actions/learn/action.ts","store/reducers/learn/learnReducer.ts","store/actions/toastr/action.ts","components/StickyScroll/StickyScroll.tsx","layouts/LearnPage/components/NewTip/NewTip.tsx","hooks/useLearnStats.ts","hooks/useQuote.ts","components/Quote/Quote.tsx","components/Header/Header.tsx","components/GoalList/GoalList.tsx","store/actions/goals/action.ts","hooks/useGoalCreator.ts","components/StickyItem/StickyItem.tsx","store/reducers/goals/goalsReducer.ts","layouts/GoalPage/components/EditGoal/EditGoal.tsx","App.tsx","layouts/HomePage/HomePage.tsx","layouts/LearnPage/LearnPage.tsx","layouts/WelcomePage/WelcomePage.tsx","layouts/GoalPage/GoalPage.tsx","layouts/AssignTipPage/AssignTipPage.tsx","serviceWorker.ts","store/reducers/tips/tipsReducer.ts","store/reducers/page/pageReducer.ts","store/reducers/goalFields/goalFieldsReducer.ts","store/reducers/toastr/toastrReducer.ts","store/root.ts","index.tsx","components/Toastr/Toastr.tsx"],"names":["goToPage","actionCreatorFactory","actionCreator","usePageRoute","page","dispatch","useDispatch","name","props","readTip","learnReducer","reducerWithInitialState","mind","goodTips","badTips","time","fit","case","state","payload","groupName","feedback","id","LEARN_TIP","title","description","unlockFields","getTip","LEARN_TIP_GROUP","addToastr","deleteToastr","StickyScroll","children","className","countReadTips","group","learn","length","NewTip","onRead","count","useSelector","tip","onClick","type","message","tipId","map","text","index","key","useLearnStats","mindCount","timeCount","fitCount","allTipsCount","readTipsCount","QUOTES","value","author","Quote","quote","useQuote","Header","onClickBack","GoalList","goalArray","goals","goal","createNewGoals","editGoals","assignTipToGoals","useGoalCreator","prompt","StickyItem","top","bottom","style","GOAL_FIELDS","goalsReducer","tipsId","newState","push","fields","EditGoal","goalIndex","onStopEdit","goalFields","action","onSubmit","e","preventDefault","form","target","Array","from","elements","reduce","includes","defaultValue","why","specific","measure","achievable","exciting","margin","background","width","color","PAGE_NAME_TO_COMPONENT","home","goToLearn","goToGoal","countGoal","display","height","gridTemplateRows","gap","gridTemplateColumns","viewBox","fill","d","disabled","goToHome","useState","setPage","welcome","createGoal","editIndex","setEditIndex","assignTip","selectedIndex","setSelectedIndex","onChange","filter","toggleSelectByIndex","checked","forEach","Boolean","window","location","hostname","match","tipsReducer","pageReducer","goalFieldsReducer","toastrReducer","messages","incrementId","rootReducer","combineReducers","tips","toastr","initialState","JSON","parse","localStorage","getItem","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","setItem","stringify","ReactDOM","render","Suspense","fallback","pageName","pageProps","Component","hideId","setHideId","renderId","setRenderId","bemName","indexOf","setTimeout","bemMod","onTransitionEnd","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.23df23a5.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\r\nimport { PageState } from '../../reducers/page/pageReducer';\r\n \r\nconst actionCreator = actionCreatorFactory('PAGE');\r\n\r\nexport const goToPage = actionCreator<PageState>('GO_TO_PAGE');\r\n","import { useDispatch } from 'react-redux';\r\nimport { PageName } from '../store/reducers/page/pageReducer';\r\nimport { goToPage } from '../store/actions/page/action';\r\n\r\nexport function usePageRoute(page: PageName){\r\n    const dispatch = useDispatch();\r\n\r\n    return () => {\r\n        dispatch(goToPage({\r\n            name: page,\r\n            props: {}\r\n        }));\r\n    };\r\n}\r\n","import actionCreatorFactory from 'typescript-fsa';\r\nimport { LearnGroupNames } from '../../reducers/learn/learnReducer';\r\n \r\nconst actionCreator = actionCreatorFactory('LEARN');\r\n\r\ninterface ReadTipParams {\r\n    id: string;\r\n    groupName: LearnGroupNames;\r\n    feedback: 'good'|'bad';\r\n}\r\n\r\nexport const readTip = actionCreator<ReadTipParams>('READ_TIP');\r\n\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { readTip } from '../../actions/learn/action';\r\n\r\nexport interface LearnGroup {\r\n    goodTips: string[];\r\n    badTips: string[];\r\n}\r\n\r\nexport interface LearnState {\r\n    mind: LearnGroup;\r\n    time: LearnGroup;\r\n    fit: LearnGroup;\r\n}\r\n\r\nexport type LearnGroupNames = keyof LearnState;\r\n\r\nconst INITIAL_STATE: LearnState = {\r\n    mind: { goodTips: [], badTips:[]},\r\n    time: { goodTips: [], badTips:[]},\r\n    fit: { goodTips: [], badTips:[]},\r\n};\r\n\r\nexport const learnReducer = reducerWithInitialState<LearnState>(INITIAL_STATE)\r\n    .case(readTip, (state, payload) => {\r\n        return {\r\n            ...state,\r\n            [payload.groupName]: {\r\n                goodTips: [...state[payload.groupName].goodTips, ...(payload.feedback === 'good' ? [payload.id] : [])],\r\n                badTips: [...state[payload.groupName].badTips, ...(payload.feedback === 'bad' ? [payload.id] : [])]\r\n            }\r\n        };\r\n    });\r\n\r\n\r\nexport interface LearnTip {\r\n    id: string;\r\n    title: string;\r\n    description: string[];\r\n    unlockFields: string[];\r\n}\r\n\r\nconst LEARN_TIP: {[key: string]: Omit<LearnTip, 'id'>} = {\r\n    'mind-1' : {\r\n        title: 'Zerwij z rozmyślaniem',\r\n        description: [\r\n            'Często wyobrażamy sobie jak może potoczyć się przyszłość. Jednak często jest to źródło naszego niezadowolenia z obecnego stanu. Gdy nastawimy się na jedno konkretne wydarzenie czujemy się rozczarowani gdy coś pójdzie nie po naszej myśli. Staraj się działać DZIŚ aby wpłynąć na JUTRO. Myślenie o dniu jutrzejszym nie przybliży nas do celu.',\r\n            'Przeszłość jest ważna jednak musisz pamiętać że jej nie zmienisz. Działać możesz tylko DZIŚ. Analizuj co zrobiłeś źle. Pamiętaj że dzięki popełnianym błędom stajesz się mądrzejszy i skuteczniejszy. ', \r\n            'Jest tylko tu i teraz. Skończ z myśleniem o przeszłości i przyszłosci.'\r\n        ],\r\n        unlockFields: []\r\n    },\r\n    'time-1': {\r\n        title: 'Skup się!',\r\n        description: ['Zmiejsz ilość powiadomień'],\r\n        unlockFields: []\r\n    },\r\n    'time-2' : {\r\n        title: 'Dlaczego',\r\n        description: ['Odpowiedź sobie na jedno z najważniejszych pytań! Co dobrego stanie się w moim zyciu gdy zrealizuje okreslony cel. Warto się zastanowić dlaczego chcesz zrealizować określony cel? Aby Ci pomóc dodamy nowe pole w trybie edycji celu!'],\r\n        unlockFields: ['why']\r\n    },\r\n    'time-3': {\r\n        title: 'E-mail to poczta!',\r\n        description: [\r\n            'Jeśli ktoś wysyła Ci e-mail oczekuje natychmiastowej odpowiedzi. W przeciwnym razie zawdzonił by do Ciebie lub napisał na czacie (facebook, slack, itd)',\r\n            'Często tracimy czas na bez sensowne odświezanie naszej poczty sprawdzając bardzo często czy nie dostaliśmy odpowiedzi w ważnej dla nas sprawie.',\r\n            'Zrób sobie wolne! W zalezności od ilosci poczty którą dostajesz dziennie sprawdzaj i odpisuj na wszystkie e-maila codzienie lub co dwa dni.'\r\n        ],\r\n        unlockFields: []\r\n    },\r\n    'time-4' : {\r\n        title: 'Sztuka priorytetów',\r\n        description: [\r\n            'Może szkoda czasu na jakiś cel? Czasem nie można zrobić wszystkiego na raz! Jeśli tego potrzebujesz od dziś w edycji celu bedzie widniał przycisk usuń.',\r\n            'Pamietaj jednak aby nie rezygnować z celów które są dla nas ważne! Przycisk powinien być używany tylko jeśli zyskamy dzięki temu czas na realizacje ważniejszych celów!'\r\n        ],\r\n        unlockFields: ['delete']\r\n    },\r\n    'fit-1': {\r\n        title: 'Rusz się!',\r\n        description: ['Koniec z windą'],\r\n        unlockFields: []\r\n    },\r\n    'fit-2': {\r\n        title: 'Rób pomiary!',\r\n        description: ['Sprawdzaj czy Twoje działania przynoszą pożadany skutek'],\r\n        unlockFields: ['measure']\r\n    }\r\n};\r\n\r\nexport function getTip(id: string): LearnTip {\r\n    if(LEARN_TIP[id]){\r\n        return { ...LEARN_TIP[id] , id};\r\n    }\r\n    return {\r\n        id: 'unknown',\r\n        description: [],\r\n        title: '',\r\n        unlockFields: []\r\n    };\r\n}\r\n\r\nexport const LEARN_TIP_GROUP: {[key in LearnGroupNames]: LearnTip[]} = {\r\n    mind: [\r\n        getTip('mind-1'),\r\n    ],\r\n    time:[\r\n        getTip('time-1'),\r\n        getTip('time-2'),\r\n        getTip('time-3'),\r\n        getTip('time-4')\r\n    ],\r\n    fit: [\r\n        getTip('fit-1'),\r\n        getTip('fit-1')\r\n    ]\r\n};\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n \r\nconst actionCreator = actionCreatorFactory('TOASTR');\r\n\r\nexport const addToastr = actionCreator<{ type: 'success'|'error'|'warning'|'info', message: string}>('ADD_TOASTR');\r\nexport const deleteToastr = actionCreator<number>('DELETE_TOASTR');\r\n\r\n\r\n","import React from 'react';\r\nimport './StickyScroll.scss';\r\n\r\ninterface StickyScrollProps {\r\n    children: React.ReactNode;\r\n}\r\n\r\nexport const StickyScroll: React.FC<StickyScrollProps> = ({children}: StickyScrollProps) => {\r\n  \r\n\r\n    return (<div className=\"stickyScroll\">\r\n        {children}\r\n    </div>);\r\n};\r\n","import React from 'react';\r\nimport './NewTip.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LearnGroupNames, LEARN_TIP_GROUP } from '../../../../store/reducers/learn/learnReducer';\r\nimport { RootState } from '../../../../store/root';\r\nimport { readTip } from '../../../../store/actions/learn/action';\r\nimport { goToPage } from '../../../../store/actions/page/action';\r\nimport { addToastr } from '../../../../store/actions/toastr/action';\r\nimport { StickyScroll } from '../../../../components/StickyScroll/StickyScroll';\r\n\r\ninterface NewTipProps {\r\n    groupName: LearnGroupNames;\r\n    onRead(): void;\r\n}\r\n\r\nexport const countReadTips = (groupName: LearnGroupNames) => (state: RootState) => {\r\n    const group = state.learn[groupName];\r\n    return group.badTips.length + group.goodTips.length;\r\n};\r\n\r\nexport const NewTip: React.FC<NewTipProps> = ({ groupName, onRead }: NewTipProps) => {\r\n    const dispatch = useDispatch();\r\n    const count = useSelector(countReadTips(groupName));\r\n    const tip = LEARN_TIP_GROUP[groupName][count] || null;\r\n    if(tip === null){\r\n        return null;\r\n    }\r\n    const onClick = (feedback: 'good'| 'bad') => {\r\n        onRead();\r\n        dispatch(readTip({\r\n            feedback,\r\n            groupName,\r\n            id: tip.id\r\n        }));\r\n        tip.unlockFields.length && dispatch(addToastr({\r\n            type: \"success\",\r\n            message: \"Gratulacje! Odblokowałeś nowe pole do uzupelnienia w zakładce cele. Uzupełnij je najszybciej jak to mozliwe!\"\r\n        }));\r\n        feedback === 'good' && dispatch(goToPage({\r\n            name:'assignTip',\r\n            props: {\r\n                tipId: tip.id\r\n            }\r\n        }));\r\n    };\r\n    return (\r\n        <div className=\"newTip\">\r\n            <h1>{tip.title}</h1>\r\n            <StickyScroll>\r\n                {tip.description.map((text, index) => <p key={index}>{text}</p>)}\r\n                <h3>Czy porada przyda Ci się do realizacji któregoś z celów?</h3>\r\n                <div className=\"newTip__buttons\">\r\n                    <button className=\"good\" onClick={() => onClick('good')}>Tak</button>\r\n                    <button className=\"bad\" onClick={() => onClick('bad')}>Nie</button>\r\n                </div>\r\n            </StickyScroll>\r\n        </div>\r\n    );\r\n};\r\n","import { LEARN_TIP_GROUP } from '../store/reducers/learn/learnReducer';\r\nimport { useSelector } from 'react-redux';\r\nimport { countReadTips } from '../layouts/LearnPage/components/NewTip/NewTip';\r\n\r\nexport function useLearnStats(){\r\n    const mindCount = useSelector(countReadTips('mind'));\r\n    const timeCount = useSelector(countReadTips('time'));\r\n    const fitCount = useSelector(countReadTips('fit'));\r\n\r\n    const allTipsCount = LEARN_TIP_GROUP.mind.length + LEARN_TIP_GROUP.time.length + LEARN_TIP_GROUP.fit.length;\r\n\r\n    return {\r\n        allTipsCount,\r\n        readTipsCount: mindCount + timeCount + fitCount\r\n    };\r\n}\r\n","import { useLearnStats } from './useLearnStats';\r\n\r\ninterface Quote {\r\n    value: string;\r\n    author: string;\r\n}\r\n\r\nexport function useQuote() {\r\n    const {readTipsCount} = useLearnStats();\r\n    return QUOTES[readTipsCount] || QUOTES[0];\r\n}\r\n\r\n\r\nconst QUOTES: Quote[] = [\r\n    {\r\n        value: 'Sukces jest sumą małych wysiłków, powtarzanych dzień po dniu.',\r\n        author: 'Robert Collier'\r\n    },\r\n    {\r\n        value: 'Nie próbuj, rób albo nie rób, nie ma próbowania',\r\n        author: 'Mistrz Yoda'\r\n    },\r\n    {\r\n        value: 'Jeżeli chcesz uniknąć krytyki: nic nie mów, nic nie rób, bądź nikim.',\r\n        author: 'Arystoteles'\r\n    },\r\n    {\r\n        value: 'W życiu nie chodzi o to, by siebie odnaleźć. W życiu chodzi o to, aby siebie stworzyć!',\r\n        author: 'George Bernard Shaw'\r\n    },\r\n    {\r\n        value: 'Nic nie jest szczególnie trudne, jeżeli podzielisz to na małe zadania.',\r\n        author: 'Henry Ford'\r\n    },\r\n    {\r\n        value: 'Nie ma znaczenia jak wolno idziesz, tak długo jak nie przestajesz.',\r\n        author: 'Konfucjusz'\r\n    },\r\n    {\r\n        value: 'Nigdy nie rezygnuj z marzenia, tylko dlatego, że zrealizowanie go wymaga czasu. Czas i tak upłynie.',\r\n        author: 'Earl Nightingale'\r\n    }\r\n];\r\n","import React from 'react';\r\nimport './Quote.scss';\r\nimport { useQuote } from '../../hooks/useQuote';\r\n\r\nexport const Quote: React.FC = () => {\r\n    const quote = useQuote();\r\n\r\n    return (<div className=\"quote\">\r\n        <div className=\"quote__value\">\r\n            {quote.value}\r\n        </div>\r\n        <div className=\"quote__author\">\r\n            {quote.author}\r\n        </div>\r\n    </div>);\r\n};\r\n","import React, { ReactNode } from 'react';\r\n\r\nimport './Header.scss';\r\n\r\ninterface HeaderProps {\r\n    children: ReactNode;\r\n    onClickBack(): void;\r\n}\r\n\r\n\r\nexport const Header: React.FC<HeaderProps> = ({children, onClickBack}: HeaderProps) => {\r\n\r\n    return (<div className=\"header\">\r\n        <div className=\"header__button\" >\r\n            <button className=\"circle two\" onClick={onClickBack} title=\"Wróć\">{'<'} </button>\r\n        </div>\r\n        <h1 className=\"header__title\" >{children}</h1>\r\n    </div>);\r\n};\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './GoalList.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/root';\r\n\r\ninterface GoalListProps {\r\n    onClick?(index: number): void;\r\n}\r\n\r\nexport const GoalList: React.FC<GoalListProps> = ({ onClick }: GoalListProps) => {\r\n    const goalArray = useSelector((state: RootState) => state.goals);\r\n\r\n    return <>{goalArray.map((goal, index) => \r\n        <div className=\"goalList\" key={index} onClick={() => onClick && onClick(index)}>\r\n            <span>{goal.name}</span>\r\n        </div>\r\n    )}</>;\r\n};\r\n","import actionCreatorFactory from 'typescript-fsa';\r\nimport { Goal } from '../../reducers/goals/goalsReducer';\r\n \r\nconst actionCreator = actionCreatorFactory('GOALS');\r\n\r\nexport const createNewGoals = actionCreator<string>('CREATE_NEW');\r\n\r\ninterface EditGoalsParams{\r\n    index: number;\r\n    fields: Partial<Goal>;\r\n}\r\n\r\nexport const editGoals = actionCreator<EditGoalsParams>('EDIT');\r\n\r\ninterface AssignTipToGoalsParams {\r\n    index: number;\r\n    tipId: string;\r\n}\r\n\r\nexport const assignTipToGoals = actionCreator<AssignTipToGoalsParams>('ASSIGN_TIP_TO_GOALS');\r\n\r\n","import { useDispatch } from 'react-redux';\r\nimport { createNewGoals } from '../store/actions/goals/action';\r\n\r\nexport function useGoalCreator(){\r\n    const dispatch = useDispatch();\r\n\r\n    return () => {\r\n        let title = prompt('Zapisz nazwę swojego celu');\r\n        if (title) {\r\n            dispatch(createNewGoals(title));\r\n        }\r\n    };\r\n}\n","import React from 'react';\r\nimport './StickyItem.scss';\r\n\r\ninterface StickyItemProps {\r\n    children: React.ReactNode;\r\n    top?: number;\r\n    bottom?: number;\r\n}\r\n\r\nexport const StickyItem: React.FC<StickyItemProps> = ({children, top, bottom}: StickyItemProps) => {\r\n\r\n    return (<div className=\"stickyItem\" style={{top, bottom}}>\r\n        {children}\r\n    </div>);\r\n};\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { createNewGoals, editGoals, assignTipToGoals } from '../../actions/goals/action';\r\n\r\nexport interface Goal {\r\n    name: string;\r\n    why?: string;\r\n    specific?: string;\r\n    measure?: string;\r\n    achievable?: string;\r\n    time?: string;\r\n    exciting?: string;\r\n    delete?: string;\r\n    tipsId: string[];\r\n}\r\n\r\nexport type GoalField = keyof Goal;\r\n\r\nexport const GOAL_FIELDS: GoalField[] = ['name', 'why', 'specific', 'measure', 'achievable', 'time', 'exciting', 'delete'];\r\n\r\nexport type GoalsState = Goal[];\r\n\r\nexport const goalsReducer = reducerWithInitialState<GoalsState>([])\r\n    .case(createNewGoals, (state, name) => [...state, { name, tipsId: [] }])\r\n    .case(assignTipToGoals, (state, {index, tipId}) => {\r\n        const newState = [...state];\r\n        newState[index].tipsId.push(tipId);\r\n        return newState;\r\n    })\r\n    .case(editGoals, (state, {fields, index}) => {\r\n        const newState = [...state];\r\n\r\n        newState[index] = {\r\n            ...state[index],\r\n            ...fields\r\n        };\r\n        return newState;\r\n    });\r\n","import React from 'react';\r\nimport './EditGoal.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../store/root';\r\nimport { editGoals } from '../../../../store/actions/goals/action';\r\nimport { Goal, GOAL_FIELDS } from '../../../../store/reducers/goals/goalsReducer';\r\nimport { getTip } from '../../../../store/reducers/learn/learnReducer';\r\nimport { Header } from '../../../../components/Header/Header';\r\n\r\ninterface EditGoalProps {\r\n    goalIndex: number;\r\n    onStopEdit(): void;\r\n}\r\n\r\nexport const EditGoal: React.FC<EditGoalProps> = ({ goalIndex, onStopEdit }: EditGoalProps) => {\r\n    const dispatch = useDispatch();\r\n    const goal = useSelector((state: RootState) => state.goals[goalIndex]);\r\n    const goalFields = useSelector((state: RootState) => state.goalFields);\r\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const form = e.target as HTMLFormElement;\r\n        const elements = Array.from(form.elements) as HTMLInputElement[];\r\n        const fields = elements.reduce((fields, {value, name}) => {\r\n            if (value && GOAL_FIELDS.includes(name as any)) {\r\n                fields[name as 'name' | 'why'] = value;\r\n            }\r\n            return fields;\r\n        }, {} as Partial<Goal>);\r\n        dispatch(editGoals({\r\n            index: goalIndex,\r\n            fields\r\n        }));\r\n        onStopEdit();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header onClickBack={onStopEdit}>\r\n                Edycja celu\r\n            </Header>\r\n            <form action=\"\" onSubmit={onSubmit}>\r\n                <label>\r\n                    Nazwa\r\n                    <input type=\"text\" name=\"name\" defaultValue={goal.name}/>\r\n                </label>\r\n                {goalFields.includes('why') && <label>\r\n                    Co zmieni się w twoim zyciu gdy zrealizuejsz cel? Dlaczego chcesz go osiągnać?\r\n                    <input type=\"text\" name=\"why\" defaultValue={goal.why}/>\r\n                </label>}\r\n\r\n                {goalFields.includes('specific') && <label>\r\n                    Co chcesz osiągnąć? Po co chcesz zrealizować ten cel?\r\n                    <input type=\"text\" name=\"specific\" defaultValue={goal.specific}/>\r\n                </label>}\r\n\r\n                {goalFields.includes('measure') && <label>\r\n                    W jaki sposób chcesz mierzyć postęp? Skąd bedziesz wiedział czy idzesz do przodu?\r\n                    <input type=\"text\" name=\"measure\" defaultValue={goal.measure}/>\r\n                </label>}\r\n\r\n                {goalFields.includes('achievable') && <label>\r\n                    Na jakie mniejsze kroki można rozpisać twój cel?\r\n                    <input type=\"text\" name=\"achievable\" defaultValue={goal.achievable}/>\r\n                </label>}\r\n\r\n                {goalFields.includes('time') && <label>\r\n                    W jakim terminie powinieneś zrealizować pierwszy mniejszy krok z listy powyżej?\r\n                    <input type=\"text\" name=\"time\" defaultValue={goal.time}/>\r\n                </label>}\r\n\r\n                {goalFields.includes('exciting') && <label>\r\n                    Na jaki prezent sobie pozwolisz gdy spełnisz każdy mniejszy cel? \r\n                    <input type=\"text\" name=\"exciting\" defaultValue={goal.exciting}/>\r\n                </label>}\r\n\r\n                {goalFields.includes('delete') && <label>\r\n                    Czy na pewno ten cel jest warty Twojej uwagi?\r\n                    <div style={{margin: '16px 0'}}>\r\n                        <button style={{background:'red',width: 'auto', color:'white'}}>Usuń</button>\r\n                    </div>\r\n                </label>}\r\n                \r\n\r\n                <button type=\"submit\">Zapisz</button>\r\n            </form>\r\n            {!!goal.tipsId.length && <h2>Przydatne wskazówki:</h2>}\r\n            {goal.tipsId.map(tipId => {\r\n                const tip = getTip(tipId);\r\n\r\n                return <div key={tipId}>{tip.title}</div>;\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { HomePage } from './layouts/HomePage/HomePage';\r\nimport { LearnPage } from './layouts/LearnPage/LearnPage';\r\nimport { WelcomePage } from './layouts/WelcomePage/WelcomePage';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from './store/root';\r\nimport { GoalPage } from './layouts/GoalPage/GoalPage';\r\nimport { AssignTipPage, AssignTipPageProps } from './layouts/AssignTipPage/AssignTipPage';\r\n// import PermissionPage from './layouts/PermissionPage/PermissionPage';\r\n// const PermissionPage = React.lazy(() => import('./layouts/PermissionPage/PermissionPage'));\r\n\r\nexport const PAGE_NAME_TO_COMPONENT = {\r\n    home: HomePage,\r\n    learn: LearnPage,\r\n    welcome: WelcomePage,\r\n    goal: GoalPage,\r\n    assignTip: AssignTipPage\r\n};\r\n\r\nexport const App: React.FC = () => {\r\n    // if(Notification.permission !== 'granted'){\r\n    //     return <PermissionPage />;\r\n    // }\r\n    const pageName = useSelector((state:RootState) => state.page.name);\r\n    const pageProps = useSelector((state:RootState) => state.page.props) as AssignTipPageProps;\r\n    const Component = PAGE_NAME_TO_COMPONENT[pageName];\r\n    return (\r\n        <div className=\"app\">\r\n            <Component {...pageProps}/>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport './HomePage.scss';\r\nimport { usePageRoute } from '../../hooks/usePageRoute';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/root';\r\nimport { useLearnStats } from '../../hooks/useLearnStats';\r\nimport { Quote } from '../../components/Quote/Quote';\r\n\r\nexport const HomePage: React.FC = () => {\r\n    const goToLearn = usePageRoute('learn');\r\n    const goToGoal = usePageRoute('goal');\r\n    const countGoal = useSelector((state: RootState) => state.goals.length);\r\n    const {allTipsCount, readTipsCount} = useLearnStats();\r\n    return (\r\n        <div  style={\r\n            {\r\n                display: 'grid',\r\n                height: '100%',\r\n                gridTemplateRows: 'auto 1fr'\r\n            }\r\n        }>\r\n            <div>\r\n                <h1>Mój everest</h1>\r\n                <Quote />\r\n            </div>\r\n            <div  style={\r\n                {\r\n                    display: 'grid',\r\n                    gap: '16px',\r\n                    gridTemplateColumns: '1fr 1fr',\r\n                    gridTemplateRows: 'auto'\r\n                }\r\n            }>\r\n                <div>\r\n                    <button type=\"button\" onClick={goToGoal}>\r\n                        <svg style={{ width:'48px',height:'48px' }} viewBox=\"0 0 24 24\">\r\n                            <path fill=\"#000000\" d=\"M14,6L10.25,11L13.1,14.8L11.5,16C9.81,13.75 7,10 7,10L1,18H23L14,6Z\" />\r\n                        </svg>\r\n                        <br/>\r\n                        Moje cele\r\n                        <br/>\r\n                        <small >Liczba celów to <strong>{countGoal}</strong>.</small>\r\n                    </button>\r\n                </div>\r\n            \r\n                <div>\r\n                    <button type=\"button\" onClick={goToLearn} disabled={readTipsCount === allTipsCount}>\r\n                        <svg style={{ width:'48px',height:'48px' }} viewBox=\"0 0 24 24\">\r\n                            <path fill=\"#000000\" d=\"M11 23C9.9 23 9 22.1 9 21V19H15V21C15 22.1 14.1 23 13 23H11M12 3C12.28 3 12.55 3 12.81 3.05C13.42 4.22 14 6.26 14 9C14 11.1 13 16 13 16H11C11 16 10 11.1 10 9C10 6.26 10.58 4.22 11.19 3.05C11.45 3 11.72 3 12 3M12 1C11.29 1 10.61 1.09 9.95 1.26C8.78 2.83 8 5.71 8 9C8 11.28 8.38 13.37 9 16C9 17.1 9.9 18 11 18H13C14.1 18 15 17.1 15 16C15.62 13.37 16 11.28 16 9C16 5.71 15.22 2.83 14.05 1.26C13.39 1.09 12.71 1 12 1M4 8C4 11.18 5.85 15.92 8.54 17.21C8 16.21 7.61 14.67 7.34 13C6.55 11.53 6 9.62 6 8C6 6.66 6.44 5.67 7.47 4.8C7.73 3.67 8.09 2.65 8.54 1.79C5.85 3.08 4 4.82 4 8M15.46 1.79C15.91 2.65 16.27 3.67 16.53 4.8C17.56 5.67 18 6.66 18 8C18 9.62 17.45 11.53 16.66 13C16.39 14.67 16 16.21 15.46 17.21C18.15 15.92 20 11.18 20 8S18.15 3.08 15.46 1.79Z\" />\r\n                        </svg>\r\n                        <br/>\r\n                        Rozwijaj się\r\n                        <br/>\r\n                        <small >Odkryto <strong>{readTipsCount}</strong> / {allTipsCount} porad.</small>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <button type=\"button\" >\r\n                    Zmotywuj znajomych\r\n                    <br/>\r\n                    <small >Napisz do znajomych o swoich celach!</small>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport './LearnPage.scss';\r\nimport { LearnGroupNames, LEARN_TIP_GROUP } from '../../store/reducers/learn/learnReducer';\r\nimport { NewTip, countReadTips } from './components/NewTip/NewTip';\r\nimport { usePageRoute } from '../../hooks/usePageRoute';\r\nimport { useSelector } from 'react-redux';\r\nimport { Header } from '../../components/Header/Header';\r\n\r\nexport const LearnPage: React.FC = () => {\r\n    const goToHome = usePageRoute('home');\r\n    const [page, setPage] = useState<LearnGroupNames|null>(null);\r\n    const mindCount = useSelector(countReadTips('mind'));\r\n    const timeCount = useSelector(countReadTips('time'));\r\n    const fitCount = useSelector(countReadTips('fit'));\r\n\r\n    if(page !== null) {\r\n        return <NewTip groupName={page} onRead={() => {\r\n            setPage(null);\r\n        }} />;\r\n    }\r\n    return (\r\n        <div className=\"learnPage\">\r\n            <Header onClickBack={goToHome}>\r\n                Rozwijaj się\r\n            </Header>\r\n            <p>Wybierz jeden z trzech obszarów w których chciałbyś się rozwijać. Dziennie może odczytać tylko jedną wzkazówkę. </p>\r\n            <div className=\"learnPage__buttons\">\r\n\r\n                <button className=\"inline\"  type=\"button\" onClick={() => setPage('mind')} disabled={mindCount === LEARN_TIP_GROUP.mind.length}>\r\n                    <svg style={{ width:'48px',height:'48px' }} viewBox=\"0 0 24 24\">\r\n                        <path fill=\"#000000\" d=\"M12,16C12.56,16.84 13.31,17.53 14.2,18L12,20.2L9.8,18C10.69,17.53 11.45,16.84 12,16M17,11.2A2,2 0 0,0 15,13.2A2,2 0 0,0 17,15.2A2,2 0 0,0 19,13.2C19,12.09 18.1,11.2 17,11.2M7,11.2A2,2 0 0,0 5,13.2A2,2 0 0,0 7,15.2A2,2 0 0,0 9,13.2C9,12.09 8.1,11.2 7,11.2M17,8.7A4,4 0 0,1 21,12.7A4,4 0 0,1 17,16.7A4,4 0 0,1 13,12.7A4,4 0 0,1 17,8.7M7,8.7A4,4 0 0,1 11,12.7A4,4 0 0,1 7,16.7A4,4 0 0,1 3,12.7A4,4 0 0,1 7,8.7M2.24,1C4,4.7 2.73,7.46 1.55,10.2C1.19,11 1,11.83 1,12.7A6,6 0 0,0 7,18.7C7.21,18.69 7.42,18.68 7.63,18.65L10.59,21.61L12,23L13.41,21.61L16.37,18.65C16.58,18.68 16.79,18.69 17,18.7A6,6 0 0,0 23,12.7C23,11.83 22.81,11 22.45,10.2C21.27,7.46 20,4.7 21.76,1C19.12,3.06 15.36,4.69 12,4.7C8.64,4.69 4.88,3.06 2.24,1Z\" />\r\n                    </svg>\r\n                    <br/>\r\n                    Wiedza\r\n                    <br/>\r\n                    <small className=\"learnPage__buttonDesc\">Lekcji {mindCount}/{LEARN_TIP_GROUP.mind.length}</small>\r\n                    \r\n                </button>\r\n\r\n                <button className=\"inline\" type=\"button\" onClick={() => setPage('time')} disabled={timeCount === LEARN_TIP_GROUP.time.length}>\r\n                    <svg style={{ width:'48px',height:'48px' }} viewBox=\"0 0 24 24\">\r\n                        <path fill=\"#000000\" d=\"M12,20A7,7 0 0,1 5,13A7,7 0 0,1 12,6A7,7 0 0,1 19,13A7,7 0 0,1 12,20M19.03,7.39L20.45,5.97C20,5.46 19.55,5 19.04,4.56L17.62,6C16.07,4.74 14.12,4 12,4A9,9 0 0,0 3,13A9,9 0 0,0 12,22C17,22 21,17.97 21,13C21,10.88 20.26,8.93 19.03,7.39M11,14H13V8H11M15,1H9V3H15V1Z\" />\r\n                    </svg>\r\n                    <br/>\r\n                    Czas\r\n                    <br/>\r\n                    <small className=\"learnPage__buttonDesc\">Lekcji {timeCount}/{LEARN_TIP_GROUP.time.length}</small>\r\n                </button>\r\n\r\n                <button className=\"inline\"  type=\"button\" onClick={() => setPage('fit')} disabled={fitCount === LEARN_TIP_GROUP.fit.length}>\r\n                    <svg style={{ width:'48px',height:'48px' }} viewBox=\"0 0 24 24\">\r\n                        <path fill=\"#000000\" d=\"M7 7.76V16.25H11.08L11.68 15.34C12.84 13.55 14.93 12.75 16.47 12.75C17 12.75 17.45 12.84 17.79 13C18.7 13.41 18.95 14.18 19 14.74C19.08 15.87 18.5 17.03 17.5 17.71C16.6 18.33 14.44 19 11.87 19C10.12 19 7.61 18.69 5.12 17.3C5.41 14.85 6 10.88 7 7.76M7 3C4 7.09 3 18.34 3 18.34C5.9 20.31 9.08 21 11.87 21C14.86 21 17.39 20.21 18.64 19.36C21.64 17.32 21.94 12.71 18.64 11.18C18 10.89 17.26 10.75 16.47 10.75C14.17 10.75 11.5 11.96 10 14.25H9V7.09H11L12 4L7 3Z\" />\r\n                    </svg>\r\n                    <br/>\r\n                    Zdrowie\r\n                    <br/>\r\n                    <small  className=\"learnPage__buttonDesc\">Lekcji {fitCount}/{LEARN_TIP_GROUP.fit.length}</small>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n","import React from 'react';\r\nimport './WelcomePage.scss';\r\nimport { GoalList } from '../../components/GoalList/GoalList';\r\nimport { useGoalCreator } from '../../hooks/useGoalCreator';\r\nimport { usePageRoute } from '../../hooks/usePageRoute';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/root';\r\nimport { StickyScroll } from '../../components/StickyScroll/StickyScroll';\r\nimport { StickyItem } from '../../components/StickyItem/StickyItem';\r\n\r\nexport const WelcomePage: React.FC = () => {\r\n    const countGoal = useSelector((state: RootState) => state.goals.length);\r\n    const createGoal = useGoalCreator();\r\n    const goToHome = usePageRoute('home');\r\n    return (\r\n        <div style={\r\n            {\r\n                display: 'grid',\r\n                height: '100%',\r\n                gridTemplateRows: 'auto 1fr'\r\n            }\r\n        }>\r\n            <h1>Witaj w naszej aplikacji!</h1>\r\n            <StickyScroll>\r\n                <p>Na początek wypisz swoje wszystkie cele, plany, marzenia które chciałbyś zrealizować. Będziemy intensywnie nad nimi pracować abyś mógł je spełnić. Zapisz także bardzo odległe cele, być może uda się je spełnić 😉</p>\r\n                <StickyItem top={0}>\r\n                    <button type=\"button\" onClick={createGoal}>Dodaj cel lub postanownie</button>\r\n                </StickyItem>\r\n\r\n                <GoalList/>\r\n\r\n                <div style={{height:\"50vh\"}}></div>\r\n\r\n                <StickyItem bottom={0}>\r\n                    <button type=\"button\" className=\"two\" onClick={goToHome} disabled={countGoal <= 0}> Zakończ dodawanie </button>\r\n                </StickyItem>\r\n            </StickyScroll>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport './GoalPage.scss';\r\nimport { GoalList } from '../../components/GoalList/GoalList';\r\nimport { useGoalCreator } from '../../hooks/useGoalCreator';\r\nimport { usePageRoute } from '../../hooks/usePageRoute';\r\nimport { EditGoal } from './components/EditGoal/EditGoal';\r\nimport { Header } from '../../components/Header/Header';\r\nimport { StickyScroll } from '../../components/StickyScroll/StickyScroll';\r\nimport { StickyItem } from '../../components/StickyItem/StickyItem';\r\n\r\nexport const GoalPage: React.FC = () => {\r\n    const createGoal = useGoalCreator();\r\n    const goToHome = usePageRoute('home');\r\n    const [editIndex, setEditIndex] = useState<number | null>(null);\r\n\r\n    if(editIndex !== null){\r\n        return <EditGoal goalIndex={editIndex} onStopEdit={() => setEditIndex(null)}/>;\r\n    }\r\n    return (\r\n        <div style={\r\n            {\r\n                display: 'grid',\r\n                height: '100%',\r\n                gridTemplateRows: 'auto 1fr'\r\n            }\r\n        }>\r\n            <Header onClickBack={goToHome}>\r\n                Twoje cele\r\n            </Header>\r\n            <StickyScroll>\r\n                <p>Kliknij w nazwe celu aby go przeglądać lub edytować.</p>\r\n                <GoalList onClick={index => setEditIndex(index)}/>\r\n\r\n                <StickyItem bottom={0}>\r\n                    <button type=\"button\" onClick={createGoal}>Dodaj nowy cel</button>\r\n                </StickyItem>\r\n            </StickyScroll>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport './AssignTipPage.scss';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../../store/root';\r\nimport { assignTipToGoals } from '../../store/actions/goals/action';\r\nimport { usePageRoute } from '../../hooks/usePageRoute';\r\n\r\nexport interface AssignTipPageProps {\r\n    tipId: string\r\n}\r\n\r\nexport const AssignTipPage: React.FC<AssignTipPageProps> = ({ tipId }: AssignTipPageProps) => {\r\n    const dispatch = useDispatch();\r\n    const goToHome = usePageRoute('home');\r\n    const goalArray = useSelector((state: RootState) => state.goals);\r\n    const [selectedIndex, setSelectedIndex] = useState<number[]>([]);\r\n    const toggleSelectByIndex = (index: number) => {\r\n        if (selectedIndex.includes(index)) {\r\n            setSelectedIndex(selectedIndex.filter((value) => value !== index));\r\n        } else {\r\n            setSelectedIndex([...selectedIndex, index]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"assignTipPage\">\r\n            <h2>Do których celów użyjesz zdobytą wiedzę?</h2>\r\n            \r\n            {goalArray.map((goal, index) => \r\n                <label key={index} className=\"assignTipPage__goal\">\r\n                    <input \r\n                        className=\"assignTipPage__input\"\r\n                        type=\"checkbox\" \r\n                        onChange={() => toggleSelectByIndex(index)} \r\n                        checked={selectedIndex.includes(index)}\r\n                    />\r\n                    <span>{goal.name}</span>\r\n                </label>\r\n            )}\r\n\r\n            <button onClick={() => {\r\n                selectedIndex.forEach((index) => {\r\n                    dispatch(assignTipToGoals({\r\n                        index,\r\n                        tipId\r\n                    }));\r\n                });\r\n                goToHome();\r\n            }}>\r\n                Gotowe\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\n\r\nexport interface TipsState {\r\n\r\n}\r\n\r\nexport const tipsReducer = reducerWithInitialState<TipsState>({});\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { PAGE_NAME_TO_COMPONENT } from '../../../App';\r\nimport { goToPage } from '../../actions/page/action';\r\n\r\nexport type PageName = keyof typeof PAGE_NAME_TO_COMPONENT;\r\n\r\nexport interface PageState {\r\n    name: PageName;\r\n    props: {[key: string]: any};\r\n}\r\n\r\nexport const pageReducer = reducerWithInitialState<PageState>({\r\n    name: 'welcome',\r\n    props: {}\r\n})\r\n    .case(goToPage, (state, payload) => payload);\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { readTip } from '../../actions/learn/action';\r\nimport { getTip } from '../learn/learnReducer';\r\n\r\nexport type GoalFieldsState = string[];\r\n\r\nexport const goalFieldsReducer = reducerWithInitialState<GoalFieldsState>([])\r\n    .case(readTip, (state, {id}) => [...state, ...getTip(id).unlockFields]);\r\n\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { addToastr, deleteToastr } from '../../actions/toastr/action';\r\n\r\nexport type Toastr = {\r\n    type: 'success'|'error'|'warning'|'info',\r\n    message: string;\r\n    id: number;\r\n}\r\n\r\nexport type ToastrState = {\r\n    messages: Toastr[],\r\n    incrementId: number;\r\n};\r\n\r\nexport const toastrReducer = reducerWithInitialState<ToastrState>({\r\n    messages: [],\r\n    incrementId: 0,\r\n})\r\n    .case(addToastr, (state, {message, type}) => ({ \r\n        messages: [\r\n            ...state.messages, \r\n            {\r\n                id: state.incrementId++,\r\n                message,\r\n                type\r\n            }\r\n        ], \r\n        incrementId: state.incrementId++\r\n    }))\r\n    .case(deleteToastr, (state, id) => ({ \r\n        ...state,\r\n        messages: state.messages.filter((message) => message.id !== id), \r\n    }));\r\n\r\n","\r\nimport { combineReducers, createStore, Action } from 'redux';\r\nimport { goalsReducer, GoalsState } from './reducers/goals/goalsReducer';\r\nimport { tipsReducer, TipsState } from './reducers/tips/tipsReducer';\r\nimport { LearnState, learnReducer } from './reducers/learn/learnReducer';\r\nimport { PageState, pageReducer } from './reducers/page/pageReducer';\r\nimport { goalFieldsReducer, GoalFieldsState } from './reducers/goalFields/goalFieldsReducer';\r\nimport { ToastrState, toastrReducer } from './reducers/toastr/toastrReducer';\r\n\r\nexport interface RootState {\r\n    goals: GoalsState,\r\n    tips: TipsState,\r\n    learn: LearnState,\r\n    page: PageState,\r\n    goalFields: GoalFieldsState,\r\n    toastr: ToastrState\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    goals: goalsReducer, \r\n    tips: tipsReducer, \r\n    learn: learnReducer,\r\n    page: pageReducer,\r\n    goalFields: goalFieldsReducer,\r\n    toastr: toastrReducer\r\n});\r\n\r\nconst initialState: RootState = JSON.parse(window.localStorage.getItem('state') || '{}') as RootState;\r\n\r\n// @ts-ignore\r\nexport const store = createStore<RootState, Action, unknown, unknown>(rootReducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nstore.subscribe(() => {\r\n    const state = store.getState();\r\n    window.localStorage.setItem('state', JSON.stringify(state));\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from './store/root';\r\nimport { Toastr } from './components/Toastr/Toastr';\r\n\r\nReactDOM.render(<Provider store={store}>\r\n    <React.Suspense fallback={null}>\r\n        <App />\r\n        <Toastr />\r\n    </React.Suspense>\r\n</Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { useState } from 'react';\r\nimport { Block, Element } from 'react-simple-bem';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { RootState } from '../../store/root';\r\nimport { deleteToastr } from '../../store/actions/toastr/action';\r\nimport './Toastr.scss';\r\n\r\nexport const Toastr: React.FC = () => {\r\n    const [hideId, setHideId] = useState<number[]>([]);\r\n    const [renderId, setRenderId] = useState<number[]>([]);\r\n    const messages = useSelector((state: RootState) => state.toastr.messages);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Block bemName=\"toastr\">\r\n            {messages.map((message) => {\r\n                if (renderId.indexOf(message.id) === -1) {\r\n                    setTimeout(() => {\r\n                        setRenderId([...renderId, message.id]);\r\n                    }, 1);\r\n\r\n                    setTimeout(() => {\r\n                        setHideId([...hideId, message.id]);\r\n                    }, 9000);\r\n                }\r\n\r\n                return (\r\n                    <Element\r\n                        key={message.id}\r\n                        bemName=\"message\"\r\n                        bemMod={{\r\n                            [message.type]: true,\r\n                            show: renderId.indexOf(message.id) !== -1,\r\n                            hide: hideId.indexOf(message.id) !== -1,\r\n                        }}\r\n                        onTransitionEnd={() => hideId.indexOf(message.id) !== -1 && dispatch(deleteToastr(message.id))}\r\n                    >\r\n                        {message.message}\r\n                    </Element>\r\n                );\r\n            })}\r\n        </Block>\r\n    );\r\n}\r\n"],"sourceRoot":""}